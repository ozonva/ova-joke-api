version: '3.1'

services:
  db:
    image: postgres
#    restart: always
    volumes:
      - ./.var/psqldata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  kafkaui:
    image: quay.io/cloudhut/kowl:master
    environment:
      - KAFKA_BROKERS=host.docker.internal:9092
    ports:
      - "8087:8080"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  prometheus:
    image: "prom/prometheus"
    ports:
      - "9091:9090"
    volumes:
      - "./.docker/prometheus/config:/etc/prometheus"

  godoc:
    container_name: joke-api-doc
    build: ./.docker/godoc/
    volumes:
      - ./:/app:ro
    ports:
      - "9099:8088"

  grafana:
    image: grafana/grafana:5.4.3
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./.docker/grafana/provisioning/:/etc/grafana/provisioning