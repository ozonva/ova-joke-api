syntax = "proto3";

package ozonva.ova_joke_api;

option go_package = "github.com/ozonva/ova-joke-api/pkg/ova-joke-api;ova_joke_api";

// JokeAPI service for working with jokes.
service JokeService {
  // CreateJoke create new joke entity.
  rpc CreateJoke(CreateJokeRequest) returns (CreateJokeResponse) {
  }

  // MultiCreateJoke creates multiple jokes.
  rpc MultiCreateJoke(MultiCreateJokeRequest) returns (MultiCreateJokeResponse) {
  }

  // DescribeJoke show full information about Joke entity.
  rpc DescribeJoke(DescribeJokeRequest) returns (DescribeJokeResponse) {
  }

  // ListJoke show list of jokes.
  rpc ListJoke(ListJokeRequest) returns (ListJokeResponse) {
  }

  // UpdateJoke delete joke from storage.
  rpc UpdateJoke(UpdateJokeRequest) returns (UpdateJokeResponse) {
  }

  // RemoveJoke delete joke from storage.
  rpc RemoveJoke(RemoveJokeRequest) returns (RemoveJokeResponse) {
  }
}

message Joke {
  uint64 id = 1;
  string text = 2;
  uint64 author_id = 3;
}

message CreateJokeRequest {
  uint64 id = 1;
  string text = 2;
  uint64 author_id = 3;
}

message CreateJokeResponse {
}

message MultiCreateJokeRequest {
  repeated Joke jokes = 1;
}

message MultiCreateJokeResponse {
}

message DescribeJokeRequest {
  uint64 id = 1;
}

message DescribeJokeResponse {
  uint64 id = 1;
  string text = 2;
  uint64 author_id = 3;
}

message ListJokeRequest {
  uint64 limit = 1;
  uint64 offset = 2;
}

message ListJokeResponse {
  repeated Joke jokes = 1;
}

message UpdateJokeRequest {
  uint64 id = 1;
  string text = 2;
  uint64 author_id = 3;
}

message UpdateJokeResponse {
}

message RemoveJokeRequest {
  uint64 id = 1;
}

message RemoveJokeResponse {
}
